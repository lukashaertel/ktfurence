/**
 * Eurofurence API for Mobile Apps
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package org.eurofurence.data.models

import kotlinx.serialization.Serializable
import org.eurofurence.serial.LocalDateTimeSerializer
import org.eurofurence.serial.UUIDsSerializer
import java.util.*

/**
 *
 * @param StorageLastChangeDateTimeUtc
 * @param StorageDeltaStartChangeDateTimeUtc
 * @param RemoveAllBeforeInsert
 * @param ChangedEntities
 * @param DeletedEntities
 */
@Serializable
data class DeltaResponseLeft_Square_BracketEventConferenceRoomRecordRight_Square_Bracket(
        @Serializable(with = LocalDateTimeSerializer::class)
        val StorageLastChangeDateTimeUtc: java.time.LocalDateTime? = null,
        @Serializable(with = LocalDateTimeSerializer::class)
        val StorageDeltaStartChangeDateTimeUtc: java.time.LocalDateTime? = null,
        val RemoveAllBeforeInsert: kotlin.Boolean? = null,
        val ChangedEntities: kotlin.Array<EventConferenceRoomRecord>? = null,
        @Serializable(with = UUIDsSerializer::class)
        val DeletedEntities: kotlin.Array<java.util.UUID>? = null
) {
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeltaResponseLeft_Square_BracketEventConferenceRoomRecordRight_Square_Bracket

        if (StorageLastChangeDateTimeUtc != other.StorageLastChangeDateTimeUtc) return false
        if (StorageDeltaStartChangeDateTimeUtc != other.StorageDeltaStartChangeDateTimeUtc) return false
        if (RemoveAllBeforeInsert != other.RemoveAllBeforeInsert) return false
        if (!Arrays.equals(ChangedEntities, other.ChangedEntities)) return false
        if (!Arrays.equals(DeletedEntities, other.DeletedEntities)) return false

        return true
    }

    override fun hashCode(): Int {
        var result = StorageLastChangeDateTimeUtc?.hashCode() ?: 0
        result = 31 * result + (StorageDeltaStartChangeDateTimeUtc?.hashCode() ?: 0)
        result = 31 * result + (RemoveAllBeforeInsert?.hashCode() ?: 0)
        result = 31 * result + (ChangedEntities?.let { Arrays.hashCode(it) } ?: 0)
        result = 31 * result + (DeletedEntities?.let { Arrays.hashCode(it) } ?: 0)
        return result
    }

}

