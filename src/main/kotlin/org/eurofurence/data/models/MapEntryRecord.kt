/**
 * Eurofurence API for Mobile Apps
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package org.eurofurence.data.models

import kotlinx.serialization.Serializable
import org.eurofurence.serial.UUIDSerializer
import java.util.*

/**
 *
 * @param Id
 * @param X \"X\" coordinate of the *center* of a *circular area*, expressed in pixels.
 * @param Y \"Y\" coordinate of the *center* of a *circular area*, expressed in pixels.
 * @param TapRadius \"Radius\" of a *circular area* (the center of which described with X and Y), expressed in pixels.
 * @param Links
 */
@Serializable
data class MapEntryRecord(
        @Serializable(with = UUIDSerializer::class)
        val Id: java.util.UUID,
        /* \"X\" coordinate of the *center* of a *circular area*, expressed in pixels. */
        val X: kotlin.Int? = null,
        /* \"Y\" coordinate of the *center* of a *circular area*, expressed in pixels. */
        val Y: kotlin.Int? = null,
        /* \"Radius\" of a *circular area* (the center of which described with X and Y), expressed in pixels. */
        val TapRadius: kotlin.Int? = null,
        val Links: kotlin.Array<LinkFragment>? = null
) {
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as MapEntryRecord

        if (Id != other.Id) return false
        if (X != other.X) return false
        if (Y != other.Y) return false
        if (TapRadius != other.TapRadius) return false
        if (!Arrays.equals(Links, other.Links)) return false

        return true
    }

    override fun hashCode(): Int {
        var result = Id.hashCode()
        result = 31 * result + (X ?: 0)
        result = 31 * result + (Y ?: 0)
        result = 31 * result + (TapRadius ?: 0)
        result = 31 * result + (Links?.let { Arrays.hashCode(it) } ?: 0)
        return result
    }

}

